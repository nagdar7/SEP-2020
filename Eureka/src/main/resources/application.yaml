# Give a name to the eureka server
spring:
  application:
    name: eureka

# default port for eureka server
server:
  port: 8761
  ssl:
    enabled: true
    protocol: TLS
    enabled-protocols: TLSv1.2
    #   # client-auth: need
    key-store: classpath:localhost.p12
    key-store-password: changeit
    key-store-type: PKCS12
  #   trust-store: classpath:eureka.jks
  #   trust-store-password: eureka

# eureka by default will register itself as a client. So, we need to set it to false.
# What's a client server? See other microservices (image, gallery, auth, etc).
eureka:
  instance:
    hostname: localhost
    securePort: ${server.port}
    securePortEnabled: true
    # preferIpAddress: true
    nonSecurePortEnabled: false
    statusPageUrl: https://${eureka.instance.hostname}:${server.port}/info
    healthCheckUrl: https://${eureka.instance.hostname}:${server.port}/health
    homePageUrl: https://${eureka.instance.hostname}:${server.port}/
  client:
    registerWithEureka: true
    fetchRegistry: true
    # securePortEnabled: true
    serviceUrl:
      defaultZone: https://${eureka.instance.hostname}:${server.port}/eureka/
# logging.level.com.netflix: DEBUG
